---
openapi: 3.0.0

servers:
  - url: https://data.sensor.community

info:
  description: |
    ## About this documentation

    This is an unofficial documentation of the API that is used in the project [https://sensor.community](https://sensor.community).

    The source code of this documentation is at [https://github.com/bessarabov/api.sensor.community](https://github.com/bessarabov/api.sensor.community). Feel free to create Pull Request with bug fixes or improvements.

    Maybe, someday this API documentation will be adopted as official and it will be shown at [https://api.sensor.community](https://api.sensor.community) and the source code will be moved to [https://github.com/opendata-stuttgart](https://github.com/opendata-stuttgart). But for now this is just an unofficial attempt to create documentation.

    This documentation is created with openapi/swagger. It is interactive. You can enter values in for the endpoints and see here the results of the requests right in the browser.

    ## Other documentations

    Now there are several places where API is described:

     * [https://api.sensor.community/v1/](https://api.sensor.community/v1/)
     * [https://github.com/opendata-stuttgart/meta/wiki/EN-APIs](https://github.com/opendata-stuttgart/meta/wiki/EN-APIs)

    ## Sensor data object

    Many endpoints return sensor data. It is a JSON object, here is an example:

    `timestamp` is in UTC

      ```
      {
        "id": 6489703325,
        "timestamp": "2021-08-14 16:09:32",
        "sampling_rate": null,
        "location": {
          "longitude": "11.576",
          "latitude": "48.12",
          "id": 231,
          "country": "DE",
          "indoor": 0,
          "exact_location": 0,
          "altitude": "516.9"
        },
        "sensor": {
          "id": 489,
          "sensor_type": {
            "id": 14,
            "name": "SDS011",
            "manufacturer": "Nova Fitness"
          },
          "pin": "1"
        },
        "sensordatavalues": [
          {
            "id": 14216406071,
            "value_type": "P1",
            "value": "11.53"
          },
          {
            "id": 14216406074,
            "value_type": "P2",
            "value": "8.70"
          }
        ]
      }
      ```

tags:
  - name: read
    description: Get data from sensor.community

  - name: write
    description: Send data to sensor.community

paths:

  "/airrohr/v1/sensor/{sensorId}/":
    get:
      summary: Get info from one sensor for the last 5 minutes
      description: |
        With this endpoint you get get all the measures of the last 5 minutes for the the specific sensor. You can find sensor ID with the map [https://sensor.community](https://sensor.community).Usually there are 2 measures in the endpoint response.

        Don't forget to specify the slash (`/`) after sensor ID, without it the endpoint will return 404.

        The source code of this enpoint is avaliable at GitHub repo — UNKNOWN FIXME

        The response is the JSON array with zero or more JSON sensor data objects.


      tags:
        - read
      parameters:
      - description: Sensor ID
        in: path
        name: sensorId
        required: true
        example: 489
        type: integer
      responses:
        '200':
          description: successful operation

  "/static/v1/data.json":
    get:
      summary: Get info from all the sensors for the last 5 minutes
      description: |
        Warning! This endpoint return much data, tens of megabytes.

        The source code of this enpoint is avaliable at GitHub repo — UNKNOWN FIXME

        This endpoint is not working in this interactive documentation, so here is curl:

        ```
        curl https://data.sensor.community/static/v1/data.json
        ```
      tags:
        - read

  "/static/v2/data.json":
    get:
      summary: Get average of all measurements per sensor of the last 5 minutes for all sensors
      description: |
        Warning! This endpoint return much data, tens of megabytes.

        This endpoint is not working in this interactive documentation, so here is curl:

        ```
        curl https://data.sensor.community/static/v2/data.json
        ```
      tags:
        - read

  "/static/v2/data.1h.json":
    get:
      summary: Get average of all measurements per sensor of the last hour
      description: |
        Warning! This endpoint return much data, tens of megabytes.

        This endpoint is not working in this interactive documentation, so here is curl:

        ```
        curl https://data.sensor.community/static/v2/data.1h.json
        ```
      tags:
        - read

  "/static/v2/data.24h.json":
    get:
      summary: Get average of all measurements per sensor of the 24 hours
      description: |
        Warning! This endpoint return much data, tens of megabytes.

        This endpoint is not working in this interactive documentation, so here is curl:

        ```
        curl https://data.sensor.community/static/v2/data.24h.json
        ```
      tags:
        - read

  "/v1/push-sensor-data/":
    post:
      servers:
        - url: https://api.sensor.community

      summary: Send data to sensors.community
      tags:
        - write
